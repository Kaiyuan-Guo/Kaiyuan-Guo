import{_ as a,o as i,c as e,e as l}from"./app-9b26a8d7.js";const t={},r=l('<h2 id="基础概念与常识" tabindex="-1"><a class="header-anchor" href="#基础概念与常识" aria-hidden="true">#</a> 基础概念与常识</h2><h3 id="java-语言有哪些特点" tabindex="-1"><a class="header-anchor" href="#java-语言有哪些特点" aria-hidden="true">#</a> Java 语言有哪些特点？</h3><ol><li>简单易学</li><li>面向对象（封装，继承，多态）；</li><li>平台无关性（Java 虚拟机实现平台无关性）；</li><li>支持多线程</li><li>可靠性（具备异常处理和自动内存管理机制）；</li><li>安全性（Java 语言本身的设计就提供了多重安全防护机制，如访问权限修饰符、限制程序直接访问操作系统资源）；</li><li>高效性（通过 Just In Time 编译器等技术的优化，Java 语言的运行效率还是非常不错的）；</li><li>支持网络编程并且很方便；</li><li>编译与解释并存；</li><li>...</li></ol><h3 id="java-se-vs-java-ee" tabindex="-1"><a class="header-anchor" href="#java-se-vs-java-ee" aria-hidden="true">#</a> Java SE vs Java EE</h3><ul><li><p>Java SE（Java Platform，Standard Edition）: Java 平台标准版，Java 编程语言的基础，它包含了支持 Java 应用程序开发和运行的核心类库以及虚拟机等核心组件。Java SE 可以用于构建桌面应用程序或简单的服务器应用程序。</p></li><li><p>Java EE（Java Platform, Enterprise Edition ）：Java 平台企业版，建立在 Java SE 的基础上，包含了支持企业级应用程序开发和部署的标准和规范（比如 Servlet、JSP、EJB、JDBC、JPA、JTA、JavaMail、JMS）。 Java EE 可以用于构建分布式、可移植、健壮、可伸缩和安全的服务端 Java 应用程序，例如 Web 应用程序。</p></li></ul>',5),s=[r];function v(n,o){return i(),e("div",null,s)}const J=a(t,[["render",v],["__file","java-basic-questions-01.html.vue"]]);export{J as default};
